test_reason_2
test_reason_2 <- test_df_2[3]
test_res
test_reason_2
test_reason_3 <- test_df_3[3]
test_reason_3
test_reason_1
test_reason_1 <- test_df_1[2]
test_reason_1
test_reason_1 <- test_df_1[4]
test_reason_1
test_reason <- rbind(c(test_reason_1, test_reason_2, test_reason_3))
test_reason
do.call('rbind', list(test_reason_1, test_reason_2, test_reason_3))
test_reason <- do.call('rbind', list(test_reason_1, test_reason_2, test_reason_3))
head(test_reason)
result_test <- word_extract(test_teason)
result_test <- word_extract(test_reason)
head(result_test)
word_extract_1 <- function(dt) {
dt <- str_replace_all('\\W', ' ')
dt <- str_replace_all('[0-9]', ' ')
op_nouns <- extractNoun(dt)
op_count <- table(unlist(op_nouns))
op_word <- as.data.frame(op_count, stringsAsFactors = FALSE)
op_word <- rename(op_word, word = Var1, freq = Freq)
op_word <- filter(op_word, nchar(word) >= 2)
return(op_word)
}
result_test <- word_extract_1(test_reason)
result_test <- word_extract_1(test_reason)
class(test_reason)
library(dplyr)
word_extract <- function(dt) {
dt <- str_replace_all(string = dt, '\\W', ' ')
dt <- str_replace_all(string = dt, '[0-9]', ' ')
op_nouns <- extractNoun(dt)
op_count <- table(unlist(op_nouns))
op_word <- as.data.frame(op_count, stringsAsFactors = FALSE)
op_word <- rename(op_word, word = Var1, freq = Freq)
op_word <- filter(op_word, nchar(word) >= 2)
return(op_word)
}
result_test <- word_extract(test_reason)
result_test <- as.character(result_test)
head(result_test)
test_reason <- as.character(test_reason)
result_test <- word_extract(test_reason)
result_test
test_reason <- na.omit(test_reason)
result_test <- word_extract(test_reason)
test_reason <- str_replace_all(string = test_reason, '\\W', ' ')
test_reason <- str_replace_all(string = test_reason, '[0-9]', ' ')
head(test_reason)
op_nouns <- extractNoun(test_reason)
View(test_result)
View(result_test)
test_reason_1 <- test_df_1[4]
test_reason_2 <- test_df_2[3]
test_reason_3 <- test_df_3[3]
test_reason <- do.call('rbind', list(test_reason_1, test_reason_2, test_reason_3))
test_reason <- na.omit(test_reason)
result_test <- word_extract(test_reason)
test_reason_1 <- test_df_1[4]
test_reason <- na.omit(test_reason_1)
wcloud(test_reason)
test_reason <- word_extract(test_reason_1)
test_reason_1 <- test_df_1[4]
test_reason_2 <- test_df_2[3]
test_reason_3 <- test_df_3[3]
test_reason <- do.call('rbind', list(test_reason_1, test_reason_2, test_reason_3))
head(test_reason)
word_extract <- function(dt) {
dt <- str_replace_all('\\W', ' ')
dt <- str_replace_all('[0-9]', ' ')
op_nouns <- extractNoun(dt)
op_count <- table(unlist(op_nouns))
op_word <- as.data.frame(op_count, stringsAsFactors = FALSE)
op_word <- rename(op_word, word = Var1, freq = Freq)
op_word <- filter(op_word, nchar(word) >= 2)
return(op_word)
}
result_test <- word_extract(test_reason)
word_extract <- function(dt) {
dt <- str_replace_all(dt, '\\W', ' ')
dt <- str_replace_all(dt, '[0-9]', ' ')
op_nouns <- extractNoun(dt)
op_count <- table(unlist(op_nouns))
op_word <- as.data.frame(op_count, stringsAsFactors = FALSE)
op_word <- rename(op_word, word = Var1, freq = Freq)
op_word <- filter(op_word, nchar(word) >= 2)
return(op_word)
}
result_test <- word_extract(test_reason)
class(test_reason)
head(test_reason)
library(KoNLP)
useNIADic()
result_test <- data.frame()
for (a in 1:length(test_reason)) {
result_test[a] <- extractNoun(test_reason[a])
}
for (a in 1:length(test_reason)) {
result_test[a] <- extractNoun(test_reason[a])
}
test_reason_1 <- test_df_1[4]
test_reason_2 <- test_df_2[3]
test_reason_3 <- test_df_3[3]
test_reason <- do.call('rbind', list(test_reason_1, test_reason_2, test_reason_3))
result_test <- data.frame()
for (a in 1:length(test_reason)) {
result_test[a] <- extractNoun(test_reason[a])
}
install.packages('KoNLP')
install.packages("KoNLP")
library(KoNLP)
library(tidyverse)
library(dplyr)
library(stringr)
library(googlesheets)
library(wordcloud2)
library(igraph)
library(tidygraph)
library(tidytext)
library(ggraph)
useNIADic()
Sys.setlocale("LC_ALL", "korean")
word_extract <- function(dt) {
dt <- str_replace_all(dt, '\\W', ' ')
dt <- str_replace_all(dt, '[0-9]', ' ')
op_nouns <- extractNoun(dt)
op_count <- table(unlist(op_nouns))
op_word <- as.data.frame(op_count, stringsAsFactors = FALSE)
op_word <- rename(op_word, word = Var1, freq = Freq)
op_word <- filter(op_word, nchar(word) >= 2)
return(op_word)
}
wcloud <- function(op_word) {
set.seed(7777)
wordcloud2(op_word, color = 'random-light', size = 2, minSize = 2)
}
test_reason_1 <- test_df_1[4]
test_reason_2 <- test_df_2[3]
test_reason_3 <- test_df_3[3]
test_reason <- do.call('rbind', list(test_reason_1, test_reason_2, test_reason_3))
result_test <- data.frame()
for (a in 1:length(test_reason)) {
result_test[a] <- extractNoun(test_reason[a])
}
View(result_test)
test_reason_1 <- test_df_1[4]
test_reason_2 <- test_df_2[3]
test_reason_3 <- test_df_3[3]
test_reason <- do.call('rbind', list(test_reason_1, test_reason_2, test_reason_3))
test_reason[1]
for (a in 1:length(test_reason)) {
result_test[a] <- extractNoun(test_reason[,a])
}
test_reason[,1]
test_reason[1]
test_reason[[1]]
test_reason_1 <- test_df_1[4]
test_reason_2 <- test_df_2[3]
test_reason_3 <- test_df_3[3]
test_reason <- do.call('rbind', list(test_reason_1, test_reason_2, test_reason_3))
head(test_reason)
test_reason[1,1]
for (a in 1:length(test_reason)) {
result_test[a] <- extractNoun(test_reason[a, 1])
}
test_reaon <- na.omit(test_reason)
for (a in 1:length(test_reason)) {
result_test[a] <- extractNoun(test_reason[a, 1])
}
for (a in 1:length(test_reason)) {
result_test[a, 1] <- extractNoun(test_reason[a, 1])
}
for (a in 1:length(test_reason)) {
result_test[,1] <- extractNoun(test_reason[a, 1])
}
for (a in 1:length(test_reason)) {
result_test[length(result_test)+1] <- extractNoun(test_reason[a, 1])
}
test_reason_1 <- test_df_1[4]
test_reason_2 <- test_df_2[3]
test_reason_3 <- test_df_3[3]
test_reason <- do.call('rbind', list(test_reason_1, test_reason_2, test_reason_3))
test_reaon <- na.omit(test_reason)
test_reason_1 <- test_df_1[4]
test_reason_2 <- test_df_2[3]
test_reason_3 <- test_df_3[3]
test_reason <- do.call('rbind', list(test_reason_1, test_reason_2, test_reason_3))
test_reason <- na.omit(test_reason)
remove(test_reaon)
head(test_reason)
test_reason <- as.data.frame(test_reason)
head(test_reason)
test_reason[1]
test_reason[1, 1]
length(test_reason)
test_reason <- as.character(test_reason)
length(test_reason)
head(test_reason)
test_reason_1 <- test_df_1[4]
test_reason_2 <- test_df_2[3]
test_reason_3 <- test_df_3[3]
test_reason <- do.call('rbind', list(test_reason_1, test_reason_2, test_reason_3))
head(test_reason)
View(test_reason)
test_reason <- unlist(test_reason)
test_reason
head(test_reason)
test_df_1 <- gs_read(test_title_1)
test_df_2 <- gs_read(test_title_2)
test_df_3 <- gs_read(test_title_3)
test_df_1
test_reason_1 <- test_df_1[4]
test_reason_2 <- test_df_2[3]
test_reason_3 <- test_df_3[3]
head(test_reason_1)
test_reason_1[1]
test_reason_1[1,]
test_reason <- do.call('rbind', list(test_reason_1, test_reason_2, test_reason_3))
test_reason[1,]
nrow(test_reason)
library(KoNLP)
library(tidyverse)
library(dplyr)
library(stringr)
library(googlesheets)
library(wordcloud2)
library(igraph)
library(tidygraph)
library(tidytext)
library(ggraph)
useNIADic()
Sys.setlocale("LC_ALL", "korean")
word_extract <- function(dt) {
dt <- str_replace_all(dt, '\\W', ' ')
dt <- str_replace_all(dt, '[0-9]', ' ')
op_nouns <- extractNoun(dt)
op_count <- table(unlist(op_nouns))
op_word <- as.data.frame(op_count, stringsAsFactors = FALSE)
op_word <- rename(op_word, word = Var1, freq = Freq)
op_word <- filter(op_word, nchar(word) >= 2)
return(op_word)
}
wcloud <- function(op_word) {
set.seed(7777)
wordcloud2(op_word, color = 'random-light', size = 2, minSize = 2)
}
toron_1 <- gs_title('[1토론] 경주 문무대왕릉 관광 활성화를 방해하는 원인 진단(응답)')
toron_2 <- gs_title('[2토론] 경주 문무대왕릉 관광 활성화 방안(응답)')
df_1 <- gs_read(toron_1, ws = '응답')
df_2 <- gs_read(toron_2, ws = '응답')
reason_1 <- df_1[4]
reason_1 <- na.omit(reason_1)
reason_2 <- df_2[4]
reason_2 <- na.omit(reason_2)
result_reason_1 <- word_extract(reason_1)
result_reason_2 <- word_extract(reason_2)
wcloud(result_reason_1)
wcloud(result_reason_2)
test <- gs_title('1노랑(입론)')
test_title <- gs_title('1노랑(입론)')
remove(test)
test_df <- gs_read(test_title)
reason_test <- test_df[4]
head(reason_test)
reason_test <- na.omit(reason_test)
result_test <- word_extract(reason_test)
test_title <- gs_title('1파랑(입론)')
test_df <- gs_read(test_title, ws = '파란구역')
reason_test <- test_df[4]
reason_test <- na.omit(reason_test)
result_test <- word_extract(reason_test)
head(result_test)
word_extract <- function(dt) {
dt <- str_replace_all(string = dt, pattern = '\\W', ' ')
dt <- str_replace_all(string = dt, pattern = '[0-9]', ' ')
op_nouns <- extractNoun(dt)
op_count <- table(unlist(op_nouns))
op_word <- as.data.frame(op_count, stringsAsFactors = FALSE)
op_word <- rename(op_word, word = Var1, freq = Freq)
op_word <- filter(op_word, nchar(word) >= 2)
return(op_word)
}
result_test <- word_extract(reason_test)
class(reason_test)
reason_test <- as.character(unlist(reason_test))
head(reason_test)
test_title <- gs_title('1파랑(입론)')
test_df <- gs_read(test_title, ws = '파란구역')
reason_test <- test_df[4]
reason_test <- na.omit(reason_test)
reason_test <- as.character(unlist(reason_test))
head(reason_test)
result_test <- word_extract(reason_test)
head(result_test)
wcloud(result_test)
wcloud <- function(op_word) {
set.seed(7777)
wordcloud2(op_word, color = 'random-light', size = 2, minSize = 1)
}
wcloud(result_test)
test_title <- gs_title('1파랑(입론)')
test_df <- gs_read(test_title, ws = '파란구역')
reason_test <- test_df[4]
reason_test <- na.omit(reason_test)
result_test <- word_extract(reason_test)
wcloud(result_test)
test_df[4]
reason_test <- test_df[3]
reason_test <- na.omit(reason_test)
result_test <- word_extract(reason_test)
wcloud(result_test)
test_title <- gs_title('1파랑(입론)')
test_df <- gs_read(test_title, ws = '파란구역')
reason_test <- test_df[3]
reason_test <- na.omit(reason_test)
reason_test <- as.character(unlist(reason_test))
result_test <- word_extract(reason_test)
wcloud(result_test)
renderWordcloud2('symin', result_test)
wcloud <- function(op_word) {
set.seed(7777)
wordcloud2(op_word, color = 'random-light', size = 2, minSize = 1, backgroundColor = 'grey')
}
wcloud(result_test)
library(shiny)
n <- 1
n <- 1
ui <- bootstrapPage(
numericInput('size', 'Size of wordcloud', n),
wordcloud2Output('wordcloud2')
)
server <- function(input, output) {
output$wordcloud2 <- renderWordcloud2({
wordcloud2(demoFreq, size=input$size)
})
}
shinyApp(ui = ui, server = server)
n <- 1
ui <- bootstrapPage(
numericInput('size', 'Size of wordcloud', n),
wordcloud2Output('wordcloud2')
)
server <- function(input, output) {
output$wordcloud2 <- renderWordcloud2({
wordcloud2(result_test, size=input$size)
})
}
shinyApp(ui = ui, server = server)
output$wordcloud2 <- renderWordcloud2({
wordcloud2(result_test, size=input$size, backgroundColor = 'grey', color = 'random-light')
})
n <- 1
ui <- bootstrapPage(
numericInput('size', 'Size of wordcloud', n),
wordcloud2Output('wordcloud2')
)
server <- function(input, output) {
output$wordcloud2 <- renderWordcloud2({
wordcloud2(result_test, size=input$size, backgroundColor = 'grey', color = 'random-light')
})
}
shinyApp(ui = ui, server = server)
wcloud <- function(op_word) {
set.seed(7777)
wordcloud2(op_word, color = 'random-light', size = 1, backgroundColor = 'grey')
}
wcloud(result_test)
runApp('newdir')
runExample('01_hello')
runApp('App-1')
wcloud(result_test)
toron_1 <- gs_title('「경주 문무대왕릉 관광지 활성화 방안」마련을 위한  시민원탁회의 사전조사문(응답)')
df_1 <- gs_read(toron_1, ws = '설문지 응답 시트1')
library(KoNLP)
library(tidyverse)
library(dplyr)
library(stringr)
library(googlesheets)
library(wordcloud2)
# library(igraph)
# library(tidygraph)
# library(tidytext)
# library(ggraph)
# library(shiny)
useNIADic()
Sys.setlocale("LC_ALL", "korean")
word_extract <- function(dt) {
dt <- str_replace_all(string = dt, pattern = '\\W', ' ')
dt <- str_replace_all(string = dt, pattern = '[0-9]', ' ')
op_nouns <- extractNoun(dt)
op_count <- table(unlist(op_nouns))
op_word <- as.data.frame(op_count, stringsAsFactors = FALSE)
op_word <- rename(op_word, word = Var1, freq = Freq)
op_word <- filter(op_word, nchar(word) >= 2)
return(op_word)
}
wcloud <- function(op_word) {
set.seed(7777)
wordcloud2(op_word, color = 'random-light', size = 1, backgroundColor = 'grey')
}
toron_1 <- gs_title('「경주 문무대왕릉 관광지 활성화 방안」마련을 위한  시민원탁회의 사전조사문(응답)')
df_1 <- gs_read(toron_1, ws = '설문지 응답 시트1')
View(df_1)
reason_1 <- df_1[7]
reason_1 <- na.omit(reason_1)
result_reason_1 <- as.character(unlist(result_reason_1))
result_reason_1 <- word_extract(reason_1)
wcloud(result_reason_1)
library(KoNLP)
library(tidyverse)
library(dplyr)
library(stringr)
library(googlesheets)
library(wordcloud2)
# library(igraph)
# library(tidygraph)
# library(tidytext)
# library(ggraph)
# library(shiny)
useNIADic()
Sys.setlocale("LC_ALL", "korean")
word_extract <- function(dt) {
dt <- str_replace_all(string = dt, pattern = '\\W', ' ')
dt <- str_replace_all(string = dt, pattern = '[0-9]', ' ')
op_nouns <- extractNoun(dt)
op_count <- table(unlist(op_nouns))
op_word <- as.data.frame(op_count, stringsAsFactors = FALSE)
op_word <- rename(op_word, word = Var1, freq = Freq)
op_word <- filter(op_word, nchar(word) >= 2)
return(op_word)
}
wcloud <- function(op_word) {
set.seed(7777)
wordcloud2(op_word, color = 'random-light', size = 1, backgroundColor = 'grey')
}
toron_1 <- gs_title('「경주 문무대왕릉 관광지 활성화 방안」마련을 위한  시민원탁회의 사전조사문(응답)')
df_1 <- gs_read(toron_1, ws = '설문지 응답 시트1')
View(df_1)
reason_1 <- df_1[7]
reason_1 <- na.omit(reason_1)
result_reason_1 <- as.character(unlist(result_reason_1))
result_reason_1 <- word_extract(reason_1)
wcloud(result_reason_1)
wcloud(result_test)
# n <- 1
# ui <- bootstrapPage(
#   numericInput('size', 'Size of wordcloud', n),
#   wordcloud2Output('wordcloud2')
# )
# server <- function(input, output) {
#   output$wordcloud2 <- renderWordcloud2({
#     wordcloud2(result_test, size=input$size, backgroundColor = 'grey', color = 'random-light')
#   })
# }
# shinyApp(ui = ui, server = server)
wcloud <- function(op_word) {
set.seed(7777)
wordcloud2(op_word, color = 'random-light', size = 2, backgroundColor = 'grey')
}
wcloud(result_reason_1)
library(KoNLP)
library(tidyverse)
library(dplyr)
library(stringr)
library(googlesheets)
library(wordcloud2)
# library(igraph)
# library(tidygraph)
# library(tidytext)
# library(ggraph)
# library(shiny)
useNIADic()
Sys.setlocale("LC_ALL", "korean")
word_extract <- function(dt) {
dt <- str_replace_all(string = dt, pattern = '\\W', ' ')
dt <- str_replace_all(string = dt, pattern = '[0-9]', ' ')
op_nouns <- extractNoun(dt)
op_count <- table(unlist(op_nouns))
op_word <- as.data.frame(op_count, stringsAsFactors = FALSE)
op_word <- rename(op_word, word = Var1, freq = Freq)
op_word <- filter(op_word, nchar(word) >= 2)
return(op_word)
}
wcloud <- function(op_word) {
set.seed(7777)
wordcloud2(op_word, color = 'random-light', size = 2, backgroundColor = 'grey')
}
toron_1 <- gs_title('「경주 문무대왕릉 관광지 활성화 방안」마련을 위한  시민원탁회의 사전조사문(응답)')
df_1 <- gs_read(toron_1, ws = '설문지 응답 시트1')
View(df_1)
reason_1 <- df_1[7]
reason_1 <- na.omit(reason_1)
result_reason_1 <- as.character(unlist(result_reason_1))
result_reason_1 <- word_extract(reason_1)
wcloud(result_reason_1)
# wcloud(result_test)
# n <- 1
# ui <- bootstrapPage(
#   numericInput('size', 'Size of wordcloud', n),
#   wordcloud2Output('wordcloud2')
# )
# server <- function(input, output) {
#   output$wordcloud2 <- renderWordcloud2({
#     wordcloud2(result_test, size=input$size, backgroundColor = 'grey', color = 'random-light')
#   })
# }
# shinyApp(ui = ui, server = server)
